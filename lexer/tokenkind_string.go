// Code generated by "stringer -type=TokenKind"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenKindEOF-1]
	_ = x[TokenKindString-2]
	_ = x[TokenKindBool-3]
	_ = x[TokenKindIdent-4]
	_ = x[TokenKindAssignment-5]
	_ = x[TokenKindPlus-6]
	_ = x[TokenKindOpenSquareBracket-7]
	_ = x[TokenKindCloseSquareBracket-8]
	_ = x[TokenKindInt-9]
	_ = x[TokenKindFloat-10]
	_ = x[TokenKindComplex-11]
	_ = x[TokenKindError-12]
}

const _TokenKind_name = "TokenKindEOFTokenKindStringTokenKindBoolTokenKindIdentTokenKindAssignmentTokenKindPlusTokenKindOpenSquareBracketTokenKindCloseSquareBracketTokenKindIntTokenKindFloatTokenKindComplexTokenKindError"

var _TokenKind_index = [...]uint8{0, 12, 27, 40, 54, 73, 86, 112, 139, 151, 165, 181, 195}

func (i TokenKind) String() string {
	i -= 1
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
